name: Test, Build and Publish (on tags)

on: [push]

jobs:
  style:
    name: Check code style
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Check styles with pre-commit
        run: |
          poetry run pre-commit run --all-files

  build:
    name: Test and build python distribution
    runs-on: "ubuntu-22.04"
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest
  publish:
    name: Publish the built distribution
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Build the sdist and wheel
        run: |
          poetry build
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_KEY }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_KEY }}
